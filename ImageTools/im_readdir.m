function stimDir = im_readdir(imgDir, window, isgray)
% stimDir = im_readdir(imgDir, window, isgray)
%
% This function read the images in imgDir (and make texture if window is
% not empty).
%
% Inputs:
%     imgDir        <struct> the image dir (generated by im_dir.m).
%     window        <int> the window index in PTB.
%     isgray        <boo> whether use all layers of .matrix. 0: load all
%                    layers; 1: only load the first layer (i.e., gray image).
%
% Output:
%     stimDir       <struct> the stimulus structure
%
% Created by Haiyang Jin (19-Feb-2020)
%
% See also:
% im_dir; im_writedir; ptb_openmovie

if ~exist('window', 'var') || isempty(window)
    window = '';
end

% by default only load the first layer
if ~exist('isgray', 'var') || isempty(isgray)
    isgray = 0;
end

% number of images
nImage = numel(imgDir);

% load information for each image separately
for iImage = 1:nImage

    clear tmp

    tmp.fn = imgDir(iImage).name;
    tmp.folder = imgDir(iImage).folder;
    tmp.condition = imgDir(iImage).condition;

    % read images and make texture
    [tmp.matrix, map, tmp.alpha] = imread(fullfile(tmp.folder, tmp.fn));

    % apply map if needed
    if ~isempty(map)
        try
            tmp.matrix = im2uint8(ind2rgb(tmp.matrix,map));
        catch
            tmp.matrix = uint8(ind2rgb(tmp.matrix,map) * 255);
        end
    end

    % check the layer of tmp.matrix
    if isgray
        tmp.matrix = tmp.matrix(:, :, 1);
    end

    % make texture for PTB
    tmp.texture = im_mktexture(window, tmp.matrix, tmp.alpha);

    % save the info in stim_dir
    if iImage == 1
        stimDir = repmat(tmp, nImage, 1);
    else
        stimDir(iImage) = tmp;
    end

end

% remove the field names if all the values are empty
names = fieldnames(stimDir);
% the values of which fieldname is empty
isRmove = cellfun(@(x) all(cellfun(@isempty, {stimDir.(x)})), names);

% trim stimDir
stimDir = rmfield(stimDir, names(isRmove));

end