function stimDir = im_readdir(imgDir, window, allLayer)
% stimDir = im_readdir(imgDir, window, allLayer)
%
% This function read the images in imgDir (and make texture if window is
% not empty).
%
% Inputs:
%     imgDir        <structure> the image dir (generated by im_dir.m).
%     window        <numeric> the window index in PTB.
%     allLayer      <logical> load all layers of .matrix. 1: load all
%                    layers; 0: only load the first layer.
%
% Output:
%     stimDir       <structure> the stimulus structure
%
% Created by Haiyang Jin (19-Feb-2020)

if ~exist('window', 'var') || isempty(window)
    window = '';
end

% by default only load the first layer
if ~exist('allLayer', 'var') || isempty(allLayer)
    allLayer = 0;
end

% number of images
nImage = numel(imgDir);

% load information for each image separately
for iImage = 1:nImage
    
    clear tmp
    
    temp.fn = imgDir(iImage).name;
    temp.folder = imgDir(iImage).folder;
    temp.condition = imgDir(iImage).condition;
    
    % load images as different layers for different types of images
    [~, ~, imagetype] = fileparts(temp.fn);
    switch imagetype(2:end)
        case 'png'
            [temp.matrix, ~, temp.alpha] = imread(fullfile(temp.folder, temp.fn));
            temp.texture = im_mktexture(window, cat(3, temp.matrix, temp.alpha));
        case {'jpg', 'tif', 'bmp'}
            temp.matrix = imread(fullfile(temp.folder, temp.fn));
            
            % check the layer of tmp.matrix
            if numel(size(temp.matrix)) == 3 && ~allLayer
                temp.matrix = temp.matrix(:, :, 1);
            end
            
            temp.alpha = ''; % creat NaN array
            temp.texture = im_mktexture(window, temp.matrix);
        otherwise
            error('Please define the processing for %s. (You may wanna to contact the author)',...
                imagetype(2:end));
    end
    
    % save the info in stim_dir
    if iImage == 1
        stimDir = repmat(temp, nImage, 1);
    else
        stimDir(iImage) = temp;
    end
        
end

% remove the field names if all the values are empty
names = fieldnames(stimDir);
% the values of which fieldname is empty 
isRmove = cellfun(@(x) all(cellfun(@isempty, {stimDir.(x)})), names);

% trim stimDir
stimDir = rmfield(stimDir, names(isRmove));

end