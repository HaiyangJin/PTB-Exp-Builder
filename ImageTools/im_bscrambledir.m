function stimDir = im_bscrambledir(stimDir, widthPatch, heightPatch, ...
    matrixFieldname, alphaFieldname)
% stimDir = im_bscrambledir(stimDir, widthPatch, heightPatch, ...
%    matrixFieldname, alphaFieldname)
%
% This function generates the phase scrambled for the stimulus direcgtory.
%
% Inputs:
%     stimDir          <structure> stimulus structure [generated by
%                       im_readdir].
%     widthPatch       <integer> the width of the patch. Default is [].
%     heightPatch      <integer> the height of the patch. Default is [].
%     matrixFieldname  <fieldname> the fieldname for the image  matrix.
%     alphaFieldname   <fieldname> the fieldname for the alpha layer matrix.
%
% Output:
%     stimDir                 <structure> stimulus structure [a new
%     fieldname .bsmatrix will be added.
%
% Created by Haiyang Jin (11-Aug-2020)

if ~exist('widthPatch', 'var') || isempty(widthPatch)
    widthPatch = [];
end

if ~exist('heightPatch', 'var') || isempty(heightPatch)
    heightPatch = [];
end

% obtain the cell of stimulus matrix
if ~exist('matrixFieldname', 'var') || isempty(matrixFieldname)
    matrixCell = {stimDir.matrix};
else
    matrixCell = {stimDir.(matrixFieldname)};
end

% obtain the cell of stimulus alpha matrix
if ~exist('alphaFieldname', 'var') || isempty(alphaFieldname)
    alphaFieldname = 'alpha';
end
if isfield(stimDir, alphaFieldname)
    alphaCell = {stimDir.(alphaFieldname)};
else
    alphaCell = cell(size(matrixCell));
end

% generated the phase scrambled matrix
[scrambledCell, scraAlphaCell] = cellfun(@(x, y) im_boxscramble(x, y, widthPatch, heightPatch),...
    matrixCell, alphaCell, 'uni', false);

% save the phase-scrambled matrix as a new fiedlname
[stimDir.bsmatrix] = deal(scrambledCell{:});
if ~isempty(scraAlphaCell)
    [stimDir.bsalpha] = deal(scraAlphaCell{:});
end

end